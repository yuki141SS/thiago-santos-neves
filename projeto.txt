Aplicativo:
instalar o Node.js e criar o projeto React Native:
npx react-native init AppEscolaRaioDeSol

instale as dependências:
npm install @react-navigation/native react-native-screens react-native-safe-area-context react-native-gesture-handler react-native-reanimated react-native-async-storage/async-storage

Estrutura de Arquivos
App/
├── App.js
├── screens/
│   ├── Login.js
│   ├── Dashboard.js
│   ├── Tasks.js
│   ├── Notifications.js
├── components/
│   ├── TaskItem.js
├── utils/
│   ├── storage.js

Código
1. App.js (Configuração principal)

import React from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import Login from './screens/Login';
import Dashboard from './screens/Dashboard';
import Tasks from './screens/Tasks';
import Notifications from './screens/Notifications';

const Stack = createStackNavigator();

export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Login">
        <Stack.Screen name="Login" component={Login} />
        <Stack.Screen name="Dashboard" component={Dashboard} />
        <Stack.Screen name="Tasks" component={Tasks} />
        <Stack.Screen name="Notifications" component={Notifications} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

2. Login.js
import React, { useState } from 'react';
import { View, Text, TextInput, Button, StyleSheet } from 'react-native';

export default function Login({ navigation }) {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = () => {
    if (email === 'admin' && password === '1234') {
      navigation.navigate('Dashboard');
    } else {
      alert('Credenciais inválidas!');
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Bem-vindo!</Text>
      <TextInput 
        style={styles.input}
        placeholder="Email"
        value={email}
        onChangeText={setEmail}
      />
      <TextInput 
        style={styles.input}
        placeholder="Senha"
        secureTextEntry
        value={password}
        onChangeText={setPassword}
      />
      <Button title="Entrar" onPress={handleLogin} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: 'center', padding: 20 },
  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 20 },
  input: { borderWidth: 1, borderColor: '#ccc', padding: 10, marginBottom: 15, borderRadius: 5 },
});

3. Dashboard.js
import React from 'react';
import { View, Button, StyleSheet } from 'react-native';

export default function Dashboard({ navigation }) {
  return (
    <View style={styles.container}>
      <Button title="Gerenciar Tarefas" onPress={() => navigation.navigate('Tasks')} />
      <Button title="Enviar Notificações" onPress={() => navigation.navigate('Notifications')} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: 'center', padding: 20 },
});

4. Tasks.js
import React, { useState } from 'react';
import { View, Text, TextInput, Button, FlatList, StyleSheet } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';

export default function Tasks() {
  const [task, setTask] = useState('');
  const [tasks, setTasks] = useState([]);

  const saveTask = async () => {
    const newTasks = [...tasks, { id: Date.now().toString(), text: task }];
    setTasks(newTasks);
    setTask('');
    await AsyncStorage.setItem('tasks', JSON.stringify(newTasks));
  };

  const loadTasks = async () => {
    const savedTasks = await AsyncStorage.getItem('tasks');
    if (savedTasks) setTasks(JSON.parse(savedTasks));
  };

  React.useEffect(() => {
    loadTasks();
  }, []);

  return (
    <View style={styles.container}>
      <TextInput 
        style={styles.input}
        placeholder="Nova tarefa"
        value={task}
        onChangeText={setTask}
      />
      <Button title="Adicionar Tarefa" onPress={saveTask} />
      <FlatList 
        data={tasks}
        keyExtractor={(item) => item.id}
        renderItem={({ item }) => <Text style={styles.task}>{item.text}</Text>}
      />
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, padding: 20 },
  input: { borderWidth: 1, borderColor: '#ccc', padding: 10, marginBottom: 15, borderRadius: 5 },
  task: { padding: 10, borderBottomWidth: 1, borderBottomColor: '#ccc' },
});


import React from 'react';
import { View, Text, Button, StyleSheet } from 'react-native';

export default function Notifications() {
  const sendNotification = () => {
    alert('Notificação enviada!');
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Enviar Notificações</Text>
      <Button title="Enviar para todos" onPress={sendNotification} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, justifyContent: 'center', padding: 20 },
  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 20 },
});


